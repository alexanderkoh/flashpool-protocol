# nixpacks.toml - Configuration for Nixpacks

# Define the providers to use. This MUST be an array assigned to the 'providers' key.
# Ensure this line is exactly as follows and not, for example, "[providers]".
providers = ["node", "apt"]

# Provider settings
[settings.node]
# Specify the desired Node.js version.
# Let's use a recent LTS version that satisfies the >=20.18.0 requirement.
version = "20"

[settings.apt]
# Install system packages needed for building native Node modules.
# python3: For node-gyp
# build-essential: Provides make, g++, etc., for compilation
# libudev-dev: Often a dependency for the 'usb' package on Linux
pkgs = ["python3", "build-essential", "libudev-dev"]

# Define phases for the build process
[phases.setup]
# nixPkgs and aptPkgs are now primarily handled by the providers and settings above.
# You can leave this section empty or remove it if not needed for other setup steps.
nixPkgs = []
# aptPkgs = [] # Commented out as it's handled by [settings.apt]

[phases.install]
# This phase typically runs 'npm install' or 'npm ci'.
# The dependencies installed here (python3, build-essential from apt) should be available.
# Default command is usually fine.
# cmds = ["npm ci"]

[phases.build]
# Your log shows NIXPACKS_BUILD_CMD="npm run dev" is being used.
# Nixpacks will use this environment variable for the build command.
# If you wanted to override it here, you could use:
cmds = ["npm run dev"]

[start]
# Define the command to start your application after the build.
# If "npm run dev" is your intended start command:
cmd = "npm run dev"
# Otherwise, Nixpacks often defaults to "npm start" for Node.js applications.
